project_name: capyfile

builds:
  - id: capysvr
    binary: capysvr
    main: ./capysvr
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64

  - id: capycmd
    binary: capycmd
    main: ./capycmd
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64

  - id: capyworker
    binary: capyworker
    main: ./capyworker
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64

archives:
  - id: capysvr
    builds:
      - capysvr
    name_template: 'capysvr-{{ .Version }}-{{ .Os }}-{{ .Arch }}'
  - id: capycmd
    builds:
      - capycmd
    name_template: 'capycmd-{{ .Version }}-{{ .Os }}-{{ .Arch }}'
  - id: capyworker
    builds:
      - capyworker
    name_template: 'capyworker-{{ .Version }}-{{ .Os }}-{{ .Arch }}'

source:
  enabled: true
  name_template: '{{ .Version }}-linux-source'

checksum:
  name_template: '{{ .Version }}-linux-checksums.sha256'

dockers:
  - dockerfile: './docker/capysvr.goreleaser.Dockerfile'
    image_templates:
      - 'capyfile/capysvr:latest'
      - 'capyfile/capysvr:{{ .Major }}-latest'
      - 'capyfile/capysvr:{{ .Version }}'
  - dockerfile: './docker/capycmd.goreleaser.Dockerfile'
    image_templates:
      - 'capyfile/capycmd:latest'
      - 'capyfile/capycmd:{{ .Major }}-latest'
      - 'capyfile/capycmd:{{ .Version }}'
  - dockerfile: './docker/capyworker.goreleaser.Dockerfile'
    image_templates:
      - 'capyfile/capyworker:latest'
      - 'capyfile/capyworker:{{ .Major }}-latest'
      - 'capyfile/capyworker:{{ .Version }}'

release:
  github:
    owner: capyfile
    name: capyfile